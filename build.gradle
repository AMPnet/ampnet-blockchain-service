buildscript {
	ext {
		kotlinVersion = '1.3.10'
		springBootVersion = '2.1.1.RELEASE'
		junitVersion = '5.3.2'
		grpcVersion = '1.13.1'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-noarg:${kotlinVersion}")
		classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.7'
	}
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'kotlin-jpa'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.google.protobuf'
apply plugin: 'idea'

group = 'com.ampnet.crowdfunding'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}
compileTestKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}

repositories {
	mavenCentral()
	jcenter()
}

configurations {
	ktlint
}

test {
	useJUnitPlatform()
}

dependencies {
	implementation('org.springframework.boot:spring-boot-starter-actuator')
	implementation('org.springframework.boot:spring-boot-starter-data-jpa')
	implementation ('org.springframework.boot:spring-boot-configuration-processor')
	implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
	implementation("org.jetbrains.kotlin:kotlin-reflect")
	implementation('org.flywaydb:flyway-core')
	implementation('org.postgresql:postgresql')
	implementation('org.web3j:core:4.0.4')
	implementation('io.github.microutils:kotlin-logging:1.6.22')

	implementation "io.grpc:grpc-netty-shaded:${grpcVersion}"
	implementation "io.grpc:grpc-protobuf:${grpcVersion}"
	implementation "io.grpc:grpc-stub:${grpcVersion}"
	implementation 'io.github.lognet:grpc-spring-boot-starter:3.0.0'

	testImplementation('org.springframework.boot:spring-boot-starter-test')
	testImplementation("org.junit.jupiter:junit-jupiter-api:$junitVersion")
	testImplementation("org.junit.jupiter:junit-jupiter-params:$junitVersion")
	testImplementation("io.grpc:grpc-testing:${grpcVersion}")
	testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:$junitVersion")

	ktlint "com.github.shyiko:ktlint:0.29.0"
}

protobuf {
	protoc { artifact = 'com.google.protobuf:protoc:3.5.1-1' }
	plugins {
		grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }
	}
	generateProtoTasks {
		all()*.plugins { grpc {} }
	}
}

task ktlint(type: JavaExec, group: "verification") {
	description = "Check Kotlin code style."
	main = "com.github.shyiko.ktlint.Main"
	classpath = configurations.ktlint
	args "src/**/*.kt"
}
check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
	description = "Fix Kotlin code style deviations."
	main = "com.github.shyiko.ktlint.Main"
	classpath = configurations.ktlint
	args "-F", "src/**/*.kt"
}
